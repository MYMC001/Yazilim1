generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Sector {
  id              String    @id @default(uuid())
  name            String
  userId          String
  fields      Field[] @relation("SectorToField")
  types       Type[] @relation("SectorToType")
  jobs        Job[]  @relation("SectorToJob")

  applications  Application[] @relation("SectorToApplication")
  
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

}

model Field {
  id          String @id @default(uuid())
  sectorId     String
  sector       Sector @relation("SectorToField", fields: [sectorId], references: [id])
  label       String
  imageUrl    String
  types  Type[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  
  @@index([sectorId])
}

model Type {
  id          String      @id @default(uuid())
  sectorId     String      // Foreign Key to Sector
  sector       Sector       @relation("SectorToType", fields: [sectorId], references: [id])
  fieldId String      // Foreign Key to Billboard
  field   Field   @relation(fields: [fieldId], references: [id])
  name        String
  jobs    Job[]   @relation("TypeToJob")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([sectorId])
  @@index([fieldId])
}

model Job {
  id          String    @id @default(uuid())
  sectorId     String    // Foreign Key to Sector
  sector       Sector     @relation("SectorToJob", fields: [sectorId], references: [id])
  typeId  String    // Foreign Key to Category
  type    Type  @relation("TypeToJob", fields: [typeId], references: [id])
  name        String
  about  String  @db.Text
  location     String
  //track the number of applications for a job
  applicationsCount Int @default(0)

  isFeatured  Boolean   @default(false)
  isArchived  Boolean   @default(false)
  
  applications          Application[]     @relation("JobToApplication")
 
  
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([sectorId])
  @@index([typeId])


}

model Application {

  id        String    @id @default(uuid())
  jobId String  // Foreign Key to Job
  job   Job @relation("JobToApplication", fields: [jobId], references: [id])

  sectorId String // Foreign Key to Sector
  sector   Sector @relation("SectorToApplication", fields: [sectorId], references: [id])
  name      String    @default("")
  surname   String    @default("")
  email     String    @default("")
  // Application resume, rank, etc
  resume     String    @default("")
  score      Decimal   @default(0)
  range       Int       @default(0)

  status     String    @default("pending")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([jobId])
  @@index([sectorId])

}





